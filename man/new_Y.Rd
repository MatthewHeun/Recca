% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reconstruct.R
\name{new_Y}
\alias{new_Y}
\title{Reconstruct an economy given a new final demand matrix}
\usage{
new_Y(.sutmats = NULL, Y_prime = "Y_prime", L_ixp = "L_ixp",
  L_pxp = "L_pxp", Z = "Z", D = "D", U_prime = "U_prime",
  V_prime = "V_prime")
}
\arguments{
\item{.sutmats}{a data frame of supply-use table matrices with matrices arranged in columns.}

\item{Y_prime}{a new final demand matrix or name of a column in \code{.sutmats} containing same. Default is "\code{Y_prime}".}

\item{L_ixp}{an \code{L_ixp} matrix or name of a column in \code{.sutmats} containing same. Default is "\code{L_ixp}".}

\item{L_pxp}{an \code{L_pxp} matrix or name of a column in \code{.sutmats} containing same. Default is "\code{L_pxp}".}

\item{Z}{a \code{Z} matrix or name of a column in \code{.sutmats} containing same. Default is "\code{Z}".}

\item{D}{a \code{D} matrix or name of a column in \code{.sutmats} containing same. Default is "\code{D}".}

\item{U_prime}{the name for new \code{U} matrices. Default is "\code{U_prime}".}

\item{V_prime}{the name for new \code{V} matrices. Default is "\code{V_prime}".}
}
\value{
a list or data frame with \code{U_prime} and \code{V_prime} matrices
}
\description{
When the final demand matrix changes from \code{Y} to \code{Y_prime},
this function calculates new use (\code{U_prime}) and make (\code{V_prime}) matrices
that would be required to meet the new final demand (\code{Y_prime}).
}
\details{
Note that inputs \code{L_ixp}, \code{L_pxp},
\code{Z}, and \code{D} can be
conveniently calculated by the function \code{\link{calc_io_mats}}.

Internally, this function uses \code{\link[matsindf]{matsindf_apply}},
and documentation assumes that
\code{.sutmats} is not \code{NULL} and is a data frame.
If \code{.sutmats} is present, output is a data frame with columns named by string values of output arguments, and
input arguments should be character strings that name columns in \code{.sutmats}.
If \code{.sutmats} is \code{NULL} (the default), output is a list with items named by output strings,
and input arguments should be single matrices or vectors.
}
\examples{
library(dplyr)
library(matsbyname)
library(tidyr)
UKEnergy2000mats \%>\%
  spread(key = matrix.name, value = matrix) \%>\%
  select(Country, Year, Energy.type, Last.stage, U, V, Y, r_EIOU, S_units) \%>\%
  calc_io_mats() \%>\%
  mutate(
    # Give new Y matrices that are double the existing Y matrices
    Y_prime = elementproduct_byname(2, Y)
  ) \%>\%
  # Should give U_prime and V_prime matrices that are double the existing U and V matrices
  new_Y()
}

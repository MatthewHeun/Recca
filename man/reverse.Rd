% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{reverse}
\alias{reverse}
\title{Reverse an energy conversion chain}
\usage{
reverse(.sutmats = NULL, R = "R", V = "V", U = "U", Y = "Y",
  suffix = "_rev", R_rev = paste0(R, suffix), V_rev = paste0(V,
  suffix), U_rev = paste0(U, suffix), Y_rev = paste0(Y, suffix))
}
\arguments{
\item{.sutmats}{the input ECC}

\item{R}{the \code{R} matrix in the ECC to be reversed. (Default is "\code{R}".)}

\item{V}{the \code{V} matrix in the ECC to be reversed. (Default is "\code{V}".)}

\item{U}{the \code{U} matrix in the ECC to be reversed. (Default is "\code{U}".)}

\item{Y}{the \code{Y} matrix in the ECC to be reversed. (Default is "\code{Y}".)}

\item{suffix}{the suffix to be added to matrix names. (Default is "_rev".)}

\item{R_rev}{the name of the \code{R} matrix in the reversed ECC. (Default is "\code{R_rev}".)}

\item{V_rev}{the name of the \code{V} matrix in the reversed ECC. (Default is "\code{V_rev}".)}

\item{U_rev}{the name of the \code{U} matrix in the reversed ECC. (Default is "\code{U_rev}".)}

\item{Y_rev}{the name of the \code{Y} matrix in the reversed ECC. (Default is "\code{Y_rev}".)}
}
\value{
a reversed version of the ECC described by \code{R}, \code{V}, \code{U}, and \code{Y}.
}
\description{
Leontief's original input-output analysis involved swimming
"upstream" to estimate the economy that would be needed if different final demand were observed.
But what if different resources were available?
The analysis is the same if resources become final demand (and vice versa)
and make becomes use (and vice versa).
That is, the analysis is the same if you're dealing with a reversed energy conversion chain (ECC).
This function performs that reversal.
}
\details{
To reverse an ECC, the \code{R}, \code{V}, \code{U}, and \code{Y} matrices
need to be transposed and swapped:
\code{R} with \code{Y} and
\code{V} with \code{U}.
This function performs those operations.
}
\examples{
library(dplyr)
library(Recca)
library(tidyr)
mats <- UKEnergy2000mats \%>\%
  spread(key = "matrix.name", value = "matrix") \%>\%
  rename(
    R_plus_V = "V"
  ) \%>\%
  separate_RV() \%>\%
  reverse()
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregates.R
\name{region_aggregates}
\alias{region_aggregates}
\title{Aggregate by region}
\usage{
region_aggregates(
  .sut_data,
  aggregation_map,
  country = IEATools::iea_cols$country,
  year = IEATools::iea_cols$year,
  method = IEATools::iea_cols$method,
  energy_type = IEATools::iea_cols$energy_type,
  last_stage = IEATools::iea_cols$last_stage,
  matrix_cols = c(R = Recca::psut_cols$R, U = Recca::psut_cols$U, U_feed =
    Recca::psut_cols$U_feed, U_eiou = Recca::psut_cols$U_eiou, r_eiou =
    Recca::psut_cols$r_eiou, V = Recca::psut_cols$V, Y = Recca::psut_cols$Y, S_units =
    Recca::psut_cols$S_units),
  matrix_names = Recca::psut_cols$matnames,
  matrix_values = Recca::psut_cols$matvals,
  .region = ".region"
)
}
\arguments{
\item{.sut_data}{A wide-by-matrices \code{matsindf}-style data frame of PSUT matrices.}

\item{aggregation_map}{The recipe for aggregating to regions.}

\item{country, year, method, energy_type, last_stage}{See \code{IEATools::iea_cols}.}

\item{matrix_cols}{Names of columns in .sut_data containing matrices.
Default is a vector of names from \code{Recca::psut_cols}:
R, U, U_feed, U_eiou, r_eiou, V, Y, and S_units.}

\item{matrix_names, matrix_values}{Internal column names. See \code{Recca::psut_cols}.}

\item{.region}{The of the region column used internally.
Default is ".region".}

\item{cluster}{The cluster to be used with \code{multidplyr} parallelization.
Default is \code{multidplyr::new_cluster(1)}, giving single-threaded
computation.}
}
\value{
A modified version of \code{.sut_data} wherein the \code{country} column is replaced
by region aggregates specified by \code{aggregation_map}.
}
\description{
Aggregates a data frame according to the regions given in an aggregation map.
The data frame should contain metadata columns (including \code{country})
and be wide-by-matrices.
}
\details{
The aggregation map should be a named list of 3-letter country abbreviations.
The names are the regions into which the country data is to be aggregated.
See the examples.
}
\examples{
library(tidyr)
mats_GBR <- UKEnergy2000mats \%>\%
  tidyr::pivot_wider(names_from = matrix.name, values_from = matrix)
# Add other countries, by duplicating and renaming GBR
mats <- dplyr::bind_rows(mats_GBR,
                         mats_GBR \%>\% dplyr::mutate(Country = "USA"),
                         mats_GBR \%>\% dplyr::mutate(Country = "FRA"))
# Establish the aggregation map.
agg_map <- list(EUR = c("GBR", "FRA"), AMR = "USA")
# Aggregate into continents
region_aggregates(mats, aggregation_map = agg_map)
}

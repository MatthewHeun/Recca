% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregates.R
\name{region_aggregates}
\alias{region_aggregates}
\title{Aggregate by region}
\usage{
region_aggregates(
  .sut_data,
  country = IEATools::iea_cols$country,
  region = Recca::aggregate_cols$region,
  year = IEATools::iea_cols$year,
  method = IEATools::iea_cols$method,
  energy_type = IEATools::iea_cols$energy_type,
  last_stage = IEATools::iea_cols$last_stage,
  matrix_cols = c(R = Recca::psut_cols$R, U = Recca::psut_cols$U, U_feed =
    Recca::psut_cols$U_feed, U_eiou = Recca::psut_cols$U_eiou, r_eiou =
    Recca::psut_cols$r_eiou, V = Recca::psut_cols$V, Y = Recca::psut_cols$Y, S_units =
    Recca::psut_cols$S_units),
  matrix_names = Recca::psut_cols$matnames,
  matrix_values = Recca::psut_cols$matvals
)
}
\arguments{
\item{.sut_data}{A wide-by-matrices \code{matsindf}-style data frame of PSUT matrices.}

\item{country, year, method, energy_type, last_stage}{See \code{IEATools::iea_cols}.}

\item{region}{The of the region column in .sut_data.
Default is \code{Recca::aggregate_cols$region}.}

\item{matrix_cols}{Names of columns in .sut_data containing matrices.
Default is a vector of names from \code{Recca::psut_cols}:
R, U, U_feed, U_eiou, r_eiou, V, Y, and S_units.}

\item{matrix_names, matrix_values}{Internal column names. See \code{Recca::psut_cols}.}
}
\value{
A modified version of \code{.sut_data} wherein the \code{country} column is replaced
by region aggregates specified by \code{aggregation_map}.
}
\description{
Aggregates a data frame according to the regions given in an aggregation map.
The data frame (\code{.sut_data}) should contain metadata columns (including \code{country} and \code{region})
and be wide-by-matrices.
}
\examples{
library(dplyr)
library(matsbyname)
library(tidyr)
mats_GBR <- UKEnergy2000mats \%>\%
  tidyr::pivot_wider(names_from = matrix.name, values_from = matrix)
# Add other countries, by duplicating and renaming GBR
mats <- dplyr::bind_rows(mats_GBR,
                         mats_GBR \%>\% dplyr::mutate(Country = "USA"),
                         mats_GBR \%>\% dplyr::mutate(Country = "FRA"))
# Establish the aggregation map.
agg_df <- list(EUR = c("GBR", "FRA"), AMR = "USA") \%>\%
  matsbyname::aggregation_map_to_df(few_colname = "Continent", many_colname = "Country")
# Aggregate into continents
dplyr::left_join(mats, agg_df, by = "Country") \%>\%
  region_aggregates(mats, country = "Country", region = "Continent")
}

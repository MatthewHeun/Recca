% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eroi.R
\name{calc_erois}
\alias{calc_erois}
\title{Calculate EROIs}
\usage{
calc_erois(
  .iomats = NULL,
  e_EIOU = "e_EIOU",
  L_ixp = "L_ixp",
  L_ixp_feed = "L_ixp_feed",
  D = "D",
  C = "C",
  eroi_g_p = "eroi_g_p",
  n_eroi_p = "n_eroi_p",
  g_eroi_i = "g_eroi_i",
  n_eroi_i = "n_eroi_i",
  g_eroi_p_feed = "g_eroi_p_feed",
  n_eroi_p_feed = "n_eroi_p_feed",
  g_eroi_i_feed = "g_eroi_i_feed",
  n_eroi_i_feed = "n_eroi_i_feed"
)
}
\arguments{
\item{.iomats}{a data frame containing matrices that describe the Input-Output structure
(using the supply-use table format) of an Energy Conversion Chain.
\code{.iomats} will likely have been obtained from the \code{\link{calc_io_mats}} function.}

\item{e_EIOU}{name for the \code{e_EIOU} vector on output. Default is "\code{e_EIOU}".
\code{e_EIOU} is calculated by \code{i * e_EIOU}.}

\item{L_ixp}{name for \code{L_ixp} matrix on output. Default is "L_ixp".
\code{L_ixp} is calculated by \code{D * L_pxp}.}

\item{L_ixp_feed}{name for \code{L_ixp_feed} matrix on output. Default is "L_ixp_feed".
\code{L_ixp_feed} is calculated by \code{D_feed * L_pxp_feed}.}

\item{D}{name for \code{D} matrix on output. Default is "D".
\code{D} is calculated by \code{V * q_hat_inv}.}

\item{C}{name for \code{C} matrix on output. Default is "C".
\code{C} is calculated by \code{transpose(V) * g_hat_inv}.}

\item{n_eroi_p}{is the vector of product-level net EROIs, including both energy use for feedstock and EIOU production.
\code{n_eroi_p} is calculated by \code{g_eroi_p - 1}.}

\item{g_eroi_i}{is the vector of industry-level gross EROIs, including both energy use for feedstock and EIOU production.
\code{g_eroi_i_inv} is calculated by \code{transpose(C) * g_eroi_p_inv}.}

\item{n_eroi_i}{is the vector of industry-level net EROIs, including both energy use for feedstock and EIOU production.
\code{n_eroi_i} is calculated by \code{g_eroi_i - 1}.}

\item{g_eroi_p_feed}{is the vector of product-level gross EROIs, including only energy use for feedstock production.
\code{g_eroi_p_feed_inv} is calculated by \code{transpose(i) * e_EIOU_hat * L_ixp_feed}.}

\item{n_eroi_p_feed}{is the vector of product-level net EROIs, including only energy use for feedstock production.
\code{n_eroi_p_feed} is calculated by \code{g_eroi_p_feed - 1}.}

\item{g_eroi_i_feed}{is the vector of industry-level gross EROIs, including only energy use for feedstock production.
\code{g_eroi_i_feed_inv} is calculated by \code{transpose(C) * g_eroi_p_feed_inv}.}

\item{n_eroi_i_feed}{is the vector of industry-level net EROIs, including only energy use for feedstock production.
\code{n_eroi_i_feed} is calculated by \code{g_eroi_i_feed - 1}.}

\item{g_eroi_p}{The name for the column of gross, product-based EROIs.
Default is "g_eroi_p".}
}
\value{
A data frame that includes several additional EROIs.
See description for details.
}
\description{
This function calculates energy return on investment (EROI)
given an data frame input-output matrices for an energy conversion chain.
The argument \code{.iomats} should be wide-by-matrices.
See details for types of EROIs that are returned.
}
\details{
This function adds many additional columns to \code{.sutmats}.
The default column names use the following naming convention:
\itemize{
\item names of EROIs calculated for products include the string "_p" and
\item names of EROIs calculated for industries include the string "_i".
}

Calculations are made also based on inclusion of either
\itemize{
\item only feedstock inputs ("_feed") or
\item both feedstocks and EIOU inputs (no additional string in the name).
}

Output columns include:
\itemize{
\item \code{g_eroi_p} gives the name for the column in the output data frame
for the vector of product-level gross EROIs.
These EROIs include both energy used in feedstocks and EIOU production.
The inverse of \code{g_eroi_p} is calculated by \code{transpose(i) \%*\% e_EIOU_hat \%*\% L_ixp}.
}

Note: All matrix multiplication (\code{\%*\%}) is performed "by name" using
\code{matsbyname::matrixproduct_byname()}.
}

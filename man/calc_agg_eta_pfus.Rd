% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/efficiency.R
\name{calc_agg_eta_pfus}
\alias{calc_agg_eta_pfus}
\title{Calculate aggregations and efficiencies}
\usage{
calc_agg_eta_pfus(
  .psut_df,
  p_industries,
  fd_sectors,
  remove_psut_cols = TRUE,
  piece = "noun",
  notation = list(RCLabels::bracket_notation, RCLabels::arrow_notation),
  pattern_type = "exact",
  prepositions = RCLabels::prepositions_list,
  R = Recca::psut_cols$R,
  U = Recca::psut_cols$U,
  U_feed = Recca::psut_cols$U_feed,
  U_eiou = Recca::psut_cols$U_eiou,
  r_eiou = Recca::psut_cols$r_eiou,
  V = Recca::psut_cols$V,
  Y = Recca::psut_cols$Y,
  S_units = Recca::psut_cols$S_units,
  gross = Recca::efficiency_cols$gross,
  net = Recca::efficiency_cols$net,
  gross_net = Recca::efficiency_cols$gross_net,
  last_stage = Recca::psut_cols$last_stage,
  primary = Recca::all_stages$primary,
  final = Recca::all_stages$final,
  useful = Recca::all_stages$useful,
  services = Recca::all_stages$services,
  ex_p = Recca::aggregate_cols$aggregate_primary,
  ex_f = Recca::aggregate_cols$aggregate_final,
  ex_u = Recca::aggregate_cols$aggregate_useful,
  ex_s = Recca::aggregate_cols$aggregate_services,
  ex_fd_gross = Recca::aggregate_cols$gross_aggregate_demand,
  ex_fd_net = Recca::aggregate_cols$net_aggregate_demand,
  ex_fd = Recca::aggregate_cols$aggregate_demand,
  eta_pf = Recca::efficiency_cols$eta_pf,
  eta_fu = Recca::efficiency_cols$eta_fu,
  eta_us = Recca::efficiency_cols$eta_us,
  eta_pu = Recca::efficiency_cols$eta_pu,
  eta_ps = Recca::efficiency_cols$eta_ps,
  eta_fs = Recca::efficiency_cols$eta_fs
)
}
\arguments{
\item{.psut_df}{A data frame of energy conversion chain data in PSUT format.}

\item{p_industries}{A string vector of primary industries.}

\item{fd_sectors}{A string vector of final demand sectors.}

\item{remove_psut_cols}{A boolean telling whether to delete columns containing
PSUT matrices.
Default is \code{TRUE}.}

\item{piece}{The piece of the labels used for matching.
Default is "noun".}

\item{notation}{The notation used for row and column labels.
Default is \code{list(RCLabels::bracket_notation, RCLabels::arrow_notation)}.}

\item{pattern_type}{The pattern type to be used for row and column matching.
Default is "exact".}

\item{prepositions}{A list of prepositions for row and column labels.
Default is \code{RCLabels::prepositions_list}.}

\item{R, U, V, Y, r_eiou, U_eiou, U_feed, S_units, last_stage}{String names of matrix columns in \code{.psut_df}.
See \code{Recca::psut_cols}.}

\item{gross, net, gross_net}{See \code{Recca::efficiency_cols}.}

\item{primary, final, useful, services}{See \code{IEATools::all_stages}.}

\item{ex_p, ex_fd_gross, ex_fd_net, ex_fd}{Names of aggregate columns. See \code{Recca::aggregate_cols}.}

\item{ex_f, ex_u, ex_s}{See \code{IEATools::aggregate_cols}.}

\item{eta_pf, eta_fu, eta_us, eta_pu, eta_ps, eta_fs}{See \code{Recca::efficiency_cols}.}
}
\value{
A data frame of metadata columns;
primary, final, useful, and services aggregations;
and efficiencies.
}
\description{
Given a \code{matsindf}-style data frame
of energy conversion chains (ECCs),
this function calculates primary, final, useful, and services
(when available) aggregates and associated efficiencies.
}
\details{
Final, useful, and services data are assumed to be
contained in the final demand matrix (\strong{Y}) on various rows of \code{.psut_df},
identified by the \code{last_stage} column in \code{.psut_df}.
This function will still work, even if primary energy
is different for each last stage.

Internally, primary aggregates are calculated
using \code{primary_aggregates()},
final demand aggregates are calculated
using \code{finaldemand_aggregates()}.
The meaning of final demand aggregates for each row of \code{.psut_df}
is determined by the corresponding value in the \code{last_stage} column.

Note that when an ECC stage is not present,
its aggregation and efficiency columns will be removed from output.

If a services stage is present, its efficiencies will have mixed units
and might be meaningless.
Proceed with caution.
}

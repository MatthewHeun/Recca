% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pfu_aggregates.R
\name{pfu_aggregates}
\alias{pfu_aggregates}
\title{Aggregate to primary, final, and useful stages}
\usage{
pfu_aggregates(
  .sutdata,
  p_industries,
  by = c("Total", "Product", "Industry", "Flow"),
  add_net_gross_cols = FALSE,
  piece = "all",
  notation = RCLabels::notations_list,
  pattern_type = c("exact", "leading", "trailing", "anywhere", "literal"),
  prepositions = RCLabels::prepositions_list,
  aggregate_primary = Recca::aggregate_cols$aggregate_primary,
  net_aggregate_primary = Recca::aggregate_cols$net_aggregate_primary,
  gross_aggregate_primary = Recca::aggregate_cols$gross_aggregate_primary,
  aggregate_final = Recca::aggregate_cols$aggregate_final,
  net_aggregate_final = Recca::aggregate_cols$net_aggregate_final,
  gross_aggregate_final = Recca::aggregate_cols$gross_aggregate_final,
  aggregate_useful = Recca::aggregate_cols$aggregate_useful,
  net_aggregate_useful = Recca::aggregate_cols$net_aggregate_useful,
  gross_aggregate_useful = Recca::aggregate_cols$gross_aggregate_useful,
  aggregate_services = Recca::aggregate_cols$aggregate_services,
  net_aggregate_services = Recca::aggregate_cols$net_aggregate_services,
  gross_aggregate_services = Recca::aggregate_cols$gross_aggregate_services,
  net_aggregate_finaldemand = Recca::aggregate_cols$net_aggregate_demand,
  gross_aggregate_finaldemand = Recca::aggregate_cols$gross_aggregate_demand,
  last_stage = Recca::psut_cols$last_stage,
  final = Recca::all_stages$final,
  useful = Recca::all_stages$useful,
  services = Recca::all_stages$services,
  sep = "_",
  R = Recca::psut_cols$R,
  U_colname = Recca::psut_cols$U,
  U_feed = Recca::psut_cols$U_feed,
  U_eiou = Recca::psut_cols$U_eiou,
  r_eiou = Recca::psut_cols$r_eiou,
  V = Recca::psut_cols$V,
  Y = Recca::psut_cols$Y,
  S_units = Recca::psut_cols$S_units,
  R_final = paste0(Recca::psut_cols$R, sep, final),
  U_final = paste0(Recca::psut_cols$U, sep, final),
  U_feed_final = paste0(Recca::psut_cols$U_feed, sep, final),
  U_eiou_final = paste0(Recca::psut_cols$U_eiou, sep, final),
  r_eiou_final = paste0(Recca::psut_cols$r_eiou, sep, final),
  V_final = paste0(Recca::psut_cols$V, sep, final),
  Y_final = paste0(Recca::psut_cols$Y, sep, final),
  S_units_final = paste0(Recca::psut_cols$S_units, sep, final),
  R_useful = paste0(Recca::psut_cols$R, sep, useful),
  U_useful = paste0(Recca::psut_cols$U, sep, useful),
  U_feed_useful = paste0(Recca::psut_cols$U_feed, sep, useful),
  U_eiou_useful = paste0(Recca::psut_cols$U_eiou, sep, useful),
  r_eiou_useful = paste0(Recca::psut_cols$r_eiou, sep, useful),
  V_useful = paste0(Recca::psut_cols$V, sep, useful),
  Y_useful = paste0(Recca::psut_cols$Y, sep, useful),
  S_units_useful = paste0(Recca::psut_cols$S_units, sep, useful),
  R_services = paste0(Recca::psut_cols$R, sep, services),
  U_services = paste0(Recca::psut_cols$U, sep, services),
  U_feed_services = paste0(Recca::psut_cols$U_feed, sep, services),
  U_eiou_services = paste0(Recca::psut_cols$U_eiou, sep, services),
  r_eiou_services = paste0(Recca::psut_cols$r_eiou, sep, services),
  V_services = paste0(Recca::psut_cols$V, sep, services),
  Y_services = paste0(Recca::psut_cols$Y, sep, services),
  S_units_services = paste0(Recca::psut_cols$S_units, sep, services),
  .matnames = ".matnames",
  .matvals = ".matvals"
)
}
\arguments{
\item{.sutdata}{An optional data frame containing physical supply use table
descriptions of energy conversion chains.}
}
\description{
There are several ways to aggregate energy conversion chain (ECC) data
to primary, final, or useful stages of the ECC.
\code{\link[=primary_aggregates]{primary_aggregates()}} aggregates primary energy using the
resource (\strong{R}), make (\strong{V}), and final demand (\strong{Y}) matrices.
\code{\link[=primary_aggregates]{primary_aggregates()}} gives upstream (source) aggregations for an ECC.
\code{\link[=finaldemand_aggregates]{finaldemand_aggregates()}} aggregates to the last stage
of an energy conversion chain,
regardless of whether the last stage is final or useful.
\code{\link[=finaldemand_aggregates]{finaldemand_aggregates()}} gives downstream (sink) aggregations.
However, applying \code{\link[=finaldemand_aggregates]{finaldemand_aggregates()}} to an ECC
whose last stage is final cannot produce useful stage aggregattions.
Similarly, applying \code{\link[=finaldemand_aggregates]{finaldemand_aggregates()}} to an ECC whose last stage is useful
cannot provide final stage aggregates.
This function calculates aggregates at all ECC stages (primary, final, and useful),
regardless of whether the last stage is final or useful.
See details for the approach.
}
\details{
|                | Desired aggregation stage |\tabular{lll}{
   ECC last stage \tab Final \tab Useful \cr
   Final \tab \code{\link[=finaldemand_aggregates]{finaldemand_aggregates()}} \tab Not possible \cr
   Useful \tab Not possible \tab \code{\link[=finaldemand_aggregates]{finaldemand_aggregates()}} \cr
}


Whereas \code{\link[=primary_aggregates]{primary_aggregates()}} and \code{\link[=finaldemand_aggregates]{finaldemand_aggregates()}}
work independently of the last stage of an ECC,
this function requires both final and useful last stage ECCs
to be present in \code{.sutdata}.

Suffixes to matrix names are assumed to indicate the last stage
of the ECC for which the matrix applies.
For example, two versions of the \strong{R} matrix should be present:
\code{R_final} and \code{R_useful}.

If \code{.sutdata} is a wide-by-matrices data frame
but contains a \code{last_stage} column,
\code{.sutdata} is pivoted wide to put data into the correct shape,
forming columns for each ECC matrix.
The \code{last_stage} and \code{R} columns make \code{R_final} and \code{R_useful} columns.
The \code{last_stage} and \code{V} columns make \code{V_final} and \code{V_useful} columns.
Etc.
If either the last stage final or the last stage useful ECC representations
is missing, an error is thrown.
See examples.

Internally, this function uses
\code{\link[=primary_aggregates]{primary_aggregates()}}, \code{\link[=finaldemand_aggregates]{finaldemand_aggregates()}}, and
\code{\link[=calc_eta_fu_Y_eiou]{calc_eta_fu_Y_eiou()}} to complete its work.
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{get_all_products_and_industries}
\alias{get_all_products_and_industries}
\title{Create lists of all products and industries}
\usage{
get_all_products_and_industries(
  .sutdata,
  piece = "all",
  inf_notation = TRUE,
  notation = list(RCLabels::notations_list),
  choose_most_specific = FALSE,
  prepositions = list(RCLabels::prepositions_list),
  R = IEATools::psut_cols$R,
  U = IEATools::psut_cols$U,
  V = IEATools::psut_cols$V,
  Y = IEATools::psut_cols$Y,
  products_col = Recca::prod_ind_names_colnames$product_names,
  industries_col = Recca::prod_ind_names_colnames$industry_names
)
}
\arguments{
\item{.sutdata}{A data frame or list of \code{matsindf} matrices.}

\item{piece}{A character string indicating which piece of the row or column names to retain,
one of "all", "noun", "pps", "pref" or "suff", or a preposition,
indicating which part of the row or column name is to be retained.
Default is "all".}

\item{inf_notation}{A boolean that tells whether to infer notation.
Default is \code{TRUE}.}

\item{notation}{The notation used for row and column labels.
Default is \code{list(RCLabels::notations_list)}.
The default value is wrapped in a list,
because \code{RCLabels::notations_list} is, itself, a list.
See \code{RCLabels}.}

\item{choose_most_specific}{A boolean that indicates whether the most-specific notation
will be inferred when more than one of \code{notation} matches
a row or column label
and \code{allow_multiple = FALSE}.
When \code{FALSE}, the first matching notation in \code{notations}
is returned when \code{allow_multiple = FALSE}.
Default is \code{FALSE}.}

\item{prepositions}{Prepositions that can be used in the row and column label.
Default is \code{RCLabels::prepositions_list}.}

\item{R, U, V, Y}{The names of PSUT matrices. See \code{IEAtools::psut_cols}.}

\item{products_col}{The name of the products column in the output list or data frame.
Default is \code{Recca::prod_ind_names_colnames$product_names}.}

\item{industries_col}{The name of the products column in the output list or data frame.
Default is \code{Recca::prod_ind_names_colnames$industry_names}.}
}
\value{
\code{.sutdata} with two new columns containing the names of products and industries.
}
\description{
From matrices that describe an energy conversion chain (\strong{R}, \strong{U}, \strong{V}, and \strong{Y}),
create a list of unique products (energy carriers) and industries (processing stages)
in the energy conversion chain.
}
\details{
This function is a \code{matsindf::matsindf_apply()} style function.
It can accept a \code{matsindf} data frame in the \code{.df} argument
and string for the \code{R}, \code{U}, \code{V}, and \code{Y} (as column names) in the arguments.
}
\examples{
ecc <- UKEnergy2000mats \%>\%
  tidyr::pivot_wider(names_from = "matrix.name", values_from = "matrix") \%>\%
  get_all_products_and_industries()
# Show all unique product (energy carrier) names in the first row of ecc
ecc[[Recca::prod_ind_names_colnames$product_names]][[1]]
# Show all unique industry (processing stage) names
# in the fourth row of ecc.
ecc[[Recca::prod_ind_names_colnames$industry_names]][[4]]
}
